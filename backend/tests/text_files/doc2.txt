


































FastAPI - FastAPI


















          ì½˜í…�ì¸ ë¡œ ì�´ë�™
        










 Follow @fastapi on Twitter to stay updated
      





 Subscribe to the FastAPI and friends newsletter ğŸ�‰
      


 You can now sponsor FastAPI ğŸ�°





sponsor





sponsor





sponsor





sponsor





sponsor





sponsor





sponsor





sponsor





sponsor





sponsor





sponsor





sponsor




















            FastAPI
          



            
              FastAPI
            
          



























              en - English
            



              az - azÉ™rbaycan dili
            



              bn - à¦¬à¦¾à¦‚à¦²à¦¾
            



              de - Deutsch
            



              es - espaÃ±ol
            



              fa - Ù�Ø§Ø±Ø³ÛŒ
            



              fr - franÃ§ais
            



              he - ×¢×‘×¨×™×ª
            



              hu - magyar
            



              id - Bahasa Indonesia
            



              it - italiano
            



              ja - æ—¥æœ¬èª�
            



              ko - í•œêµ­ì–´
            



              pl - Polski
            



              pt - portuguÃªs
            



              ru - Ñ€ÑƒÑ�Ñ�ĞºĞ¸Ğ¹ Ñ�Ğ·Ñ‹Ğº
            



              tr - TÃ¼rkÃ§e
            



              uk - ÑƒĞºÑ€Ğ°Ñ—Ğ½Ñ�ÑŒĞºĞ° Ğ¼Ğ¾Ğ²Ğ°
            



              ur - Ø§Ø±Ø¯Ùˆ
            



              vi - Tiáº¿ng Viá»‡t
            



              yo - YorÃ¹bÃ¡
            



              zh - ç®€ä½“ä¸­æ–‡
            



              zh-hant - ç¹�é«”ä¸­æ–‡
            



              ğŸ˜‰
            































            ê²€ìƒ‰ ì´ˆê¸°í™”
          












    fastapi/fastapi
  








          
  
    
  
  FastAPI

        



          
  
    
  
  ë°°ìš°ê¸°

        



          
  
    
  
  Reference

        



        
  
    
  
  FastAPI People

      



          
  
    
  
  Resources

        



          
  
    
  
  ì†Œê°œ

        



        
  
    
  
  Release Notes

      
















    FastAPI
  






    fastapi/fastapi
  








    
  
    FastAPI
  

    
  








            
  
    FastAPI
  

          





      ê¸°ëŠ¥
    











    
  
    ë°°ìš°ê¸°
  

    
  








            
  
    ë°°ìš°ê¸°
  

          





      íŒŒì�´ì�¬ íƒ€ì�… ì†Œê°œ
    







      ë�™ì‹œì„±ê³¼ async / await
    








    
  
    ì��ìŠµì„œ - ì‚¬ìš©ì�� ì•ˆë‚´ì„œ
  

    
  








            
  
    ì��ìŠµì„œ - ì‚¬ìš©ì�� ì•ˆë‚´ì„œ
  

          





      ì²«ê±¸ì�Œ
    







      ê²½ë¡œ ë§¤ê°œë³€ìˆ˜
    







      ì¿¼ë¦¬ ë§¤ê°œë³€ìˆ˜
    







      ìš”ì²­ ë³¸ë¬¸
    







      ì¿¼ë¦¬ ë§¤ê°œë³€ìˆ˜ì™€ ë¬¸ì��ì—´ ê²€ì¦�
    







      ê²½ë¡œ ë§¤ê°œë³€ìˆ˜ì™€ ìˆ«ì�� ê²€ì¦�
    







      ë³¸ë¬¸ - ë‹¤ì¤‘ ë§¤ê°œë³€ìˆ˜
    







      ë³¸ë¬¸ - í•„ë“œ
    







      ë³¸ë¬¸ - ì¤‘ì²© ëª¨ë�¸
    







      ìš”ì²­ ì˜ˆì œ ë�°ì�´í„° ì„ ì–¸
    







      ì¶”ê°€ ë�°ì�´í„° ì��ë£Œí˜•
    







      ì¿ í‚¤ ë§¤ê°œë³€ìˆ˜
    







      í—¤ë�” ë§¤ê°œë³€ìˆ˜
    







      ì�‘ë‹µ ëª¨ë�¸
    







      Extra Models
    







      ì�‘ë‹µ ìƒ�íƒœ ì½”ë“œ
    







      Form Data
    







      íŒŒì�¼ ìš”ì²­
    







      í�¼ ë°� íŒŒì�¼ ìš”ì²­
    







      Handling Errors
    







      ê²½ë¡œ ì�‘ë�™ ì„¤ì •
    







      JSON í˜¸í™˜ ê°€ëŠ¥ ì�¸ì½”ë�”
    







      Body - Updates
    








    
  
    ì�˜ì¡´ì„±
  

    
  








            
  
    ì�˜ì¡´ì„±
  

          





      ì�˜ì¡´ì„±ìœ¼ë¡œì„œì�˜ í�´ë�˜ìŠ¤
    







      Sub-dependencies
    







      ê²½ë¡œ ì�‘ë�™ ë�°ì½”ë ˆì�´í„°ì—�ì„œì�˜ ì�˜ì¡´ì„±
    







      ì „ì—­ ì�˜ì¡´ì„±
    







      Dependencies with yield
    











    
  
    Security
  

    
  








            
  
    Security
  

          





      Security - First Steps
    







      í˜„ì�¬ ì‚¬ìš©ì�� ê°€ì ¸ì˜¤ê¸°
    







      íŒ¨ìŠ¤ì›Œë“œì™€ Bearerë¥¼ ì�´ìš©í•œ ê°„ë‹¨í•œ OAuth2
    







      OAuth2 with Password (and hashing), Bearer with JWT tokens
    










      ë¯¸ë“¤ì›¨ì–´
    







      êµ�ì°¨ ì¶œì²˜ ë¦¬ì†ŒìŠ¤ ê³µìœ 
    







      SQL (Relational) Databases
    







      Bigger Applications - Multiple Files
    







      ë°±ê·¸ë�¼ìš´ë“œ ì�‘ì—…
    







      Metadata and Docs URLs
    







      ì •ì � íŒŒì�¼
    







      Testing
    







      ë””ë²„ê¹…
    











    
  
    ì‹¬í™” ì‚¬ìš©ì�� ì•ˆë‚´ì„œ - ë�„ì�…ë¶€
  

    
  








            
  
    ì‹¬í™” ì‚¬ìš©ì�� ì•ˆë‚´ì„œ - ë�„ì�…ë¶€
  

          





      Path Operation Advanced Configuration
    







      Additional Status Codes
    







      Return a Response Directly
    







      Custom Response - HTML, Stream, File, others
    







      Additional Responses in OpenAPI
    







      Response Cookies
    







      Response Headers
    







      Response - Change Status Code
    







      Advanced Dependencies
    








    
  
    Advanced Security
  

    
  








            
  
    Advanced Security
  

          





      OAuth2 scopes
    







      HTTP Basic Auth
    










      Using the Request Directly
    







      Using Dataclasses
    







      Advanced Middleware
    







      Sub Applications - Mounts
    







      Behind a Proxy
    







      Templates
    







      WebSockets
    







      ì�´ë²¤íŠ¸: startupê³¼ shutdown
    







      Testing WebSockets
    







      Testing Events: startup - shutdown
    







      Testing Dependencies with Overrides
    







      Testing a Database
    







      Async Tests
    







      Settings and Environment Variables
    







      OpenAPI Callbacks
    







      OpenAPI Webhooks
    







      Including WSGI - Flask, Django, others
    







      Generate Clients
    










      FastAPI CLI
    








    
  
    ë°°í�¬í•˜ê¸° - ë“¤ì–´ê°€ë©´ì„œ
  

    
  








            
  
    ë°°í�¬í•˜ê¸° - ë“¤ì–´ê°€ë©´ì„œ
  

          





      FastAPI ë²„ì „ë“¤ì—� ëŒ€í•˜ì—¬
    







      About HTTPS
    







      Run a Server Manually
    







      Deployments Concepts
    







      FastAPIë¥¼ í�´ë�¼ìš°ë“œ ì œê³µì—…ì²´ì—�ì„œ ë°°í�¬í•˜ê¸°
    







      ì„œë²„ ì›Œì»¤ - êµ¬ë‹ˆì½˜ê³¼ ìœ ë¹„ì½˜
    







      ì»¨í…Œì�´ë„ˆì�˜ FastAPI - ë�„ì»¤
    











    
  
    How To - Recipes
  

    
  








            
  
    How To - Recipes
  

          





      General - How To - Recipes
    







      GraphQL
    







      Custom Request and APIRoute class
    







      Conditional OpenAPI
    







      Extending OpenAPI
    







      Separate OpenAPI Schemas for Input and Output or Not
    







      Custom Docs UI Static Assets (Self-Hosting)
    







      Configure Swagger UI
    







SQL (Relational) Databases with Peewee (deprecated)
    







Async SQL (Relational) Databases with Encode/Databases (deprecated)
    







NoSQL (Distributed / Big Data) Databases with Couchbase (deprecated)
    














    
  
    Reference
  

    
  








            
  
    Reference
  

          





FastAPI class
    







      Request Parameters
    







      Status Codes
    







UploadFile class
    







      Exceptions - HTTPException and WebSocketException








      Dependencies - Depends() and Security()








APIRouter class
    







      Background Tasks - BackgroundTasks








Request class
    







      WebSockets
    







HTTPConnection class
    







Response class
    







      Custom Response Classes - File, HTML, Redirect, Streaming, etc.
    







      Middleware
    








    
  
    OpenAPI
  

    
  








            
  
    OpenAPI
  

          





      OpenAPI docs








      OpenAPI models











      Security Tools
    







      Encoders - jsonable_encoder








      Static Files - StaticFiles








      Templating - Jinja2Templates








      Test Client - TestClient











      FastAPI People
    








    
  
    Resources
  

    
  








            
  
    Resources
  

          





      FastAPI ì§€ì›� - ë�„ì›€ë§� ë°›ê¸°
    







      Development - Contributing
    







      Full Stack FastAPI Template
    







      External Links and Articles
    







      FastAPI and friends newsletter
    







      Repository Management Tasks
    











    
  
    ì†Œê°œ
  

    
  








            
  
    ì†Œê°œ
  

          





      Alternatives, Inspiration and Comparisons
    







      History, Design and Future
    







      Benchmarks
    







      Repository Management
    










      Release Notes
    














      ëª©ì°¨
    





          ê³¨ë“œ ìŠ¤í�°ì„œ
        







          ì�˜ê²¬ë“¤
        







Typer, FastAPIì�˜ CLI
        







          ìš”êµ¬ì‚¬í•­
        







          ì„¤ì¹˜
        







          ì˜ˆì œ
        








          ë§Œë“¤ê¸°
        







          ì‹¤í–‰í•˜ê¸°
        







          í™•ì�¸í•˜ê¸°
        







          ëŒ€í™”í˜• API ë¬¸ì„œ
        







          ëŒ€ì•ˆ API ë¬¸ì„œ
        










          ì˜ˆì œ ì‹¬í™”
        








          ëŒ€í™”í˜• API ë¬¸ì„œ ì—…ê·¸ë ˆì�´ë“œ
        







          ëŒ€ì•ˆ API ë¬¸ì„œ ì—…ê·¸ë ˆì�´ë“œ
        







          ìš”ì•½
        










          ì„±ëŠ¥
        







          ì„ íƒ�ê°€ëŠ¥í•œ ì�˜ì¡´ì„±
        







          ë�¼ì�´ì„¼ìŠ¤
        










FastAPI¶





FastAPI í”„ë ˆì�„ì›Œí�¬, ê³ ì„±ëŠ¥, ê°„í�¸í•œ í•™ìŠµ, ë¹ ë¥¸ ì½”ë“œ ì�‘ì„±, ì¤€ë¹„ë�œ í”„ë¡œë�•ì…˜













ë¬¸ì„œ: https://fastapi.tiangolo.com
ì†ŒìŠ¤ ì½”ë“œ: https://github.com/fastapi/fastapi

FastAPIëŠ” í˜„ëŒ€ì �ì�´ê³ , ë¹ ë¥´ë©°(ê³ ì„±ëŠ¥), íŒŒì�´ì�¬ í‘œì¤€ íƒ€ì�… í�ŒíŠ¸ì—� ê¸°ì´ˆí•œ Pythonì�˜ APIë¥¼ ë¹Œë“œí•˜ê¸° ìœ„í•œ ì›¹ í”„ë ˆì�„ì›Œí�¬ì�…ë‹ˆë‹¤.
ì£¼ìš” íŠ¹ì§•ìœ¼ë¡œ:


ë¹ ë¦„: (Starletteê³¼ Pydantic ë�•ë¶„ì—�) NodeJS ë°� **Go**ì™€ ëŒ€ë“±í•  ì •ë�„ë¡œ ë§¤ìš° ë†’ì�€ ì„±ëŠ¥. ì‚¬ìš© ê°€ëŠ¥í•œ ê°€ì�¥ ë¹ ë¥¸ íŒŒì�´ì�¬ í”„ë ˆì�„ì›Œí�¬ ì¤‘ í•˜ë‚˜.


ë¹ ë¥¸ ì½”ë“œ ì�‘ì„±: ì•½ 200%ì—�ì„œ 300%ê¹Œì§€ ê¸°ëŠ¥ ê°œë°œ ì†�ë�„ ì¦�ê°€. *

ì �ì�€ ë²„ê·¸: ì‚¬ë�Œ(ê°œë°œì��)ì—� ì�˜í•œ ì—�ëŸ¬ ì•½ 40% ê°�ì†Œ. *
ì§�ê´€ì �: í›Œë¥­í•œ í�¸ì§‘ê¸° ì§€ì›�. ëª¨ë“  ê³³ì—�ì„œ ì��ë�™ì™„ì„±. ì �ì�€ ë””ë²„ê¹… ì‹œê°„.
ì‰¬ì›€: ì‰½ê²Œ ì‚¬ìš©í•˜ê³  ë°°ìš°ë�„ë¡� ì„¤ê³„. ì �ì�€ ë¬¸ì„œ ì�½ê¸° ì‹œê°„.
ì§§ì�Œ: ì½”ë“œ ì¤‘ë³µ ìµœì†Œí™”. ê°� ë§¤ê°œë³€ìˆ˜ ì„ ì–¸ì�˜ ì—¬ëŸ¬ ê¸°ëŠ¥. ì �ì�€ ë²„ê·¸.
ê²¬ê³ í•¨: ì¤€ë¹„ë�œ í”„ë¡œë�•ì…˜ ìš© ì½”ë“œë¥¼ ì–»ìœ¼ì‹­ì‹œì˜¤. ì��ë�™ ëŒ€í™”í˜• ë¬¸ì„œì™€ í•¨ê»˜.
í‘œì¤€ ê¸°ë°˜: APIì—� ëŒ€í•œ (ì™„ì „í�ˆ í˜¸í™˜ë�˜ëŠ”) ê°œë°©í˜• í‘œì¤€ ê¸°ë°˜: OpenAPI (ì�´ì „ì—� Swaggerë¡œ ì•Œë ¤ì¡Œë�˜) ë°� JSON ìŠ¤í‚¤ë§ˆ.

* ë‚´ë¶€ ê°œë°œíŒ€ì�˜ í”„ë¡œë�•ì…˜ ì• í”Œë¦¬ì¼€ì�´ì…˜ì�„ ë¹Œë“œí•œ í…ŒìŠ¤íŠ¸ì—� ê·¼ê±°í•œ ì¸¡ì •
ê³¨ë“œ ìŠ¤í�°ì„œ¶




















ë‹¤ë¥¸ ìŠ¤í�°ì„œ
ì�˜ê²¬ë“¤¶
"[...] ì €ëŠ” ìš”ì¦˜ FastAPI**ë¥¼ ë§�ì�´ ì‚¬ìš©í•˜ê³  ì�ˆìŠµë‹ˆë‹¤. [...] ì‚¬ì‹¤ ìš°ë¦¬ íŒ€ì�˜ **ë§ˆì�´í�¬ë¡œì†Œí”„íŠ¸ ML ì„œë¹„ìŠ¤ ì „ë¶€ë¥¼ ë°”ê¿€ ê³„íš�ì�…ë‹ˆë‹¤. ê·¸ì¤‘ ì�¼ë¶€ëŠ” í•µì‹¬ Windows**ì™€ ëª‡ëª‡ì�˜ **Office ì œí’ˆë“¤ì�´ í†µí•©ë�˜ê³  ì�ˆìŠµë‹ˆë‹¤."
Kabir Khan - ë§ˆì�´í�¬ë¡œì†Œí”„íŠ¸ (ref)

"FastAPI ë�¼ì�´ë¸ŒëŸ¬ë¦¬ë¥¼ ì±„íƒ�í•˜ì—¬ ì˜ˆì¸¡**ì�„ ì–»ê¸° ìœ„í•´ ì¿¼ë¦¬ë¥¼ ì‹¤í–‰ í•  ìˆ˜ ì�ˆëŠ” **REST ì„œë²„ë¥¼ ìƒ�ì„±í–ˆìŠµë‹ˆë‹¤. [Ludwigì�„ ìœ„í•´]"
Piero Molino, Yaroslav Dudin ê·¸ë¦¬ê³  Sai Sumanth Miryala - ìš°ë²„ (ref)

"Netflix**ëŠ” ìš°ë¦¬ì�˜ ì˜¤í”ˆ ì†ŒìŠ¤ ë°°í�¬íŒ�ì�¸ **ìœ„ê¸° ê´€ë¦¬ ì˜¤ì¼€ìŠ¤íŠ¸ë ˆì�´ì…˜ í”„ë ˆì�„ì›Œí�¬ë¥¼ ë°œí‘œí•  ìˆ˜ ì�ˆì–´ ê¸°ì�©ë‹ˆë‹¤: ë°”ë¡œ **Dispatch**ì�…ë‹ˆë‹¤! [**FastAPI**ë¡œ ë¹Œë“œ]"
Kevin Glisson, Marc Vilanova, Forest Monsen - ë„·í”Œë¦­ìŠ¤ (ref)

"**FastAPI**ê°€ ë„ˆë¬´ ì¢‹ì•„ì„œ êµ¬ë¦„ ìœ„ë¥¼ ê±·ëŠ”ë“¯ í•©ë‹ˆë‹¤. ì •ë§� ì¦�ê²�ìŠµë‹ˆë‹¤!"
Brian Okken - Python Bytes íŒŸìº�ìŠ¤íŠ¸ í˜¸ìŠ¤íŠ¸ (ref)

"ì†”ì§�í�ˆ, ë‹¹ì‹ ì�´ ë§Œë“  ê²ƒì�€ ë§¤ìš° ê²¬ê³ í•˜ê³  ì„¸ë ¨ë�˜ì–´ ë³´ì�…ë‹ˆë‹¤. ì—¬ëŸ¬ ë©´ì—�ì„œ **Hug**ê°€ ì�´ë ‡ê²Œ ë�˜ì—ˆìœ¼ë©´ í•©ë‹ˆë‹¤ - ê·¸ê±¸ ë§Œë“  ëˆ„êµ°ê°€ë¥¼ ë³´ëŠ” ê²ƒì�€ ë§�ì�€ ì˜�ê°�ì�„ ì¤�ë‹ˆë‹¤."
Timothy Crosley - Hug ì œì�‘ì�� (ref)

"REST APIë¥¼ ë§Œë“¤ê¸° ìœ„í•´ **í˜„ëŒ€ì �ì�¸ í”„ë ˆì�„ì›Œí�¬**ë¥¼ ì°¾ê³  ì�ˆë‹¤ë©´ **FastAPI**ë¥¼ í™•ì�¸í•´ ë³´ì‹­ì‹œì˜¤. [...] ë¹ ë¥´ê³ , ì“°ê¸° ì‰½ê³ , ë°°ìš°ê¸°ë�„ ì‰½ìŠµë‹ˆë‹¤ [...]"
"ìš°ë¦¬ **API**ë¥¼ **FastAPI**ë¡œ ë°”ê¿¨ìŠµë‹ˆë‹¤  [...] ì•„ë§ˆ ì—¬ëŸ¬ë¶„ë�„ ì¢‹ì•„í•˜ì‹¤ ê²ƒì�…ë‹ˆë‹¤ [...]"
Ines Montani - Matthew Honnibal - Explosion AI ì„¤ë¦½ì�� - spaCy ì œì�‘ì�� (ref) - (ref)

Typer, FastAPIì�˜ CLI¶

ì›¹ API ëŒ€ì‹  í„°ë¯¸ë„�ì—�ì„œ ì‚¬ìš©í•  CLI ì•±ì�„ ë§Œë“¤ê³  ì�ˆë‹¤ë©´, Typerë¥¼ í™•ì�¸í•´ ë³´ì‹­ì‹œì˜¤.
**Typer**ëŠ” FastAPIì�˜ ë�™ìƒ�ì�…ë‹ˆë‹¤. ê·¸ë¦¬ê³  **FastAPIì�˜ CLI**ê°€ ë�˜ê¸° ìœ„í•´ ìƒ�ê²¼ìŠµë‹ˆë‹¤. âŒ¨ï¸� ğŸš€
ìš”êµ¬ì‚¬í•­¶
FastAPIëŠ” ê±°ì�¸ë“¤ì�˜ ì–´ê¹¨ ìœ„ì—� ì„œ ì�ˆìŠµë‹ˆë‹¤:

ì›¹ ë¶€ë¶„ì�„ ìœ„í•œ Starlette.
ë�°ì�´í„° ë¶€ë¶„ì�„ ìœ„í•œ Pydantic.

ì„¤ì¹˜¶

$ pip install fastapi

---> 100%


í”„ë¡œë�•ì…˜ì�„ ìœ„í•´ Uvicorn ë˜�ëŠ” Hypercornê³¼ ê°™ì�€ ASGI ì„œë²„ë�„ í•„ìš”í•  ê²�ë‹ˆë‹¤.

$ pip install "uvicorn[standard]"

---> 100%


ì˜ˆì œ¶
ë§Œë“¤ê¸°¶

main.py íŒŒì�¼ì�„ ë§Œë“œì‹­ì‹œì˜¤:

from typing import Union

from fastapi import FastAPI

app = FastAPI()


@app.get("/")
def read_root():
    return {"Hello": "World"}


@app.get("/items/{item_id}")
def read_item(item_id: int, q: Union[str, None] = None):
    return {"item_id": item_id, "q": q}


ë˜�ëŠ” async def ì‚¬ìš©í•˜ê¸°...
ì—¬ëŸ¬ë¶„ì�˜ ì½”ë“œê°€ async / awaitì�„ ì‚¬ìš©í•œë‹¤ë©´, async defë¥¼ ì‚¬ìš©í•˜ì‹­ì‹œì˜¤.
from typing import Union

from fastapi import FastAPI

app = FastAPI()


@app.get("/")
async def read_root():
    return {"Hello": "World"}


@app.get("/items/{item_id}")
async def read_item(item_id: int, q: Union[str, None] = None):
    return {"item_id": item_id, "q": q}

Note:
ì�˜ ëª¨ë¥´ê² ë‹¤ë©´, ë¬¸ì„œì—�ì„œ asyncì™€ awaitì—� ê´€í•œ "ê¸‰í•˜ì„¸ìš”?" ì„¹ì…˜ì�„ í™•ì�¸í•´ ë³´ì‹­ì‹œì˜¤.

ì‹¤í–‰í•˜ê¸°¶
ì„œë²„ë¥¼ ì‹¤í–‰í•˜ì‹­ì‹œì˜¤:

$ uvicorn main:app --reload

INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [28720]
INFO:     Started server process [28722]
INFO:     Waiting for application startup.
INFO:     Application startup complete.



uvicorn main:app --reload ëª…ë ¹ì—� ê´€í•˜ì—¬...
ëª…ë ¹ uvicorn main:appì�€ ë‹¤ì�Œì�„ ë‚˜íƒ€ëƒ…ë‹ˆë‹¤:

main: main.py íŒŒì�¼ (íŒŒì�´ì�¬ "ëª¨ë“ˆ").
app: the object created inside of main.py with the line app = FastAPI().
--reload: ì½”ë“œê°€ ë³€ê²½ë�œ í›„ ì„œë²„ ì�¬ì‹œì�‘í•˜ê¸°. ê°œë°œí™˜ê²½ì—�ì„œë§Œ ì‚¬ìš©í•˜ì‹­ì‹œì˜¤.


í™•ì�¸í•˜ê¸°¶
ë¸Œë�¼ìš°ì €ë¡œ http://127.0.0.1:8000/items/5?q=somequeryë¥¼ ì—´ì–´ë³´ì‹­ì‹œì˜¤.
ì•„ë�˜ì�˜ JSON ì�‘ë‹µì�„ ë³¼ ìˆ˜ ì�ˆìŠµë‹ˆë‹¤:
{"item_id": 5, "q": "somequery"}

ì—¬ëŸ¬ë¶„ì�€ ë²Œì�¨ APIë¥¼ ë§Œë“¤ì—ˆìŠµë‹ˆë‹¤:

ê²½ë¡œ / ë°� /items/{item_id}ì—�ì„œ HTTP ìš”ì²­ ë°›ê¸°.
ë‘� ê²½ë¡œ ëª¨ë‘� GET ì—°ì‚°(HTTP ë©”ì†Œë“œ ë¡œ ì•Œë ¤ì§„)ì�„ ë°›ìŠµë‹ˆë‹¤.
ê²½ë¡œ /items/{item_id}ëŠ” ê²½ë¡œ ë§¤ê°œë³€ìˆ˜ intí˜• ì�´ì–´ì•¼ í•˜ëŠ” item_idë¥¼ ê°€ì§€ê³  ì�ˆìŠµë‹ˆë‹¤.
ê²½ë¡œ /items/{item_id}ëŠ” ì„ íƒ�ì �ì�¸ strí˜• ì�´ì–´ì•¼ í•˜ëŠ” ê²½ë¡œ ë§¤ê°œë³€ìˆ˜ që¥¼ ê°€ì§€ê³  ì�ˆìŠµë‹ˆë‹¤.

ëŒ€í™”í˜• API ë¬¸ì„œ¶
ì�´ì œ http://127.0.0.1:8000/docsë¡œ ê°€ë³´ì‹­ì‹œì˜¤.
ì��ë�™ ëŒ€í™”í˜• API ë¬¸ì„œë¥¼ ë³¼ ìˆ˜ ì�ˆìŠµë‹ˆë‹¤ (Swagger UI ì œê³µ):

ëŒ€ì•ˆ API ë¬¸ì„œ¶
ê·¸ë¦¬ê³  ì�´ì œ http://127.0.0.1:8000/redocë¡œ ê°€ë´…ì‹œë‹¤.
ë‹¤ë¥¸ ì��ë�™ ë¬¸ì„œë¥¼ ë³¼ ìˆ˜ ì�ˆìŠµë‹ˆë‹¤(ReDoc ì œê³µ):

ì˜ˆì œ ì‹¬í™”¶
ì�´ì œ PUT ìš”ì²­ì—� ì�ˆëŠ” ë³¸ë¬¸(Body)ì�„ ë°›ê¸° ìœ„í•´ main.pyë¥¼ ìˆ˜ì •í•´ë´…ì‹œë‹¤.
Pydanticì�„ ì�´ìš©í•´ íŒŒì�´ì�¬ í‘œì¤€ íƒ€ì�…ìœ¼ë¡œ ë³¸ë¬¸ì�„ ì„ ì–¸í•©ë‹ˆë‹¤.
from typing import Union

from fastapi import FastAPI
from pydantic import BaseModel

app = FastAPI()


class Item(BaseModel):
    name: str
    price: float
    is_offer: Union[bool, None] = None


@app.get("/")
def read_root():
    return {"Hello": "World"}


@app.get("/items/{item_id}")
def read_item(item_id: int, q: Union[str, None] = None):
    return {"item_id": item_id, "q": q}


@app.put("/items/{item_id}")
def update_item(item_id: int, item: Item):
    return {"item_name": item.name, "item_id": item_id}

ì„œë²„ê°€ ì��ë�™ìœ¼ë¡œ ë¦¬ë¡œë”© í•  ìˆ˜ ì�ˆì–´ì•¼ í•©ë‹ˆë‹¤ (ìœ„ì—�ì„œ uvicorn ëª…ë ¹ì—� --reloadì�„ ì¶”ê°€ í–ˆê¸° ë•Œë¬¸ì�…ë‹ˆë‹¤).
ëŒ€í™”í˜• API ë¬¸ì„œ ì—…ê·¸ë ˆì�´ë“œ¶
ì�´ì œ http://127.0.0.1:8000/docsë¡œ ì�´ë�™í•©ë‹ˆë‹¤.

ëŒ€í™”í˜• API ë¬¸ì„œê°€ ìƒˆ ë³¸ë¬¸ê³¼ í•¨ê»˜ ì��ë�™ìœ¼ë¡œ ì—…ë�°ì�´íŠ¸ í•©ë‹ˆë‹¤:



"Try it out" ë²„íŠ¼ì�„ í�´ë¦­í•˜ë©´, ë§¤ê°œë³€ìˆ˜ë¥¼ ì±„ìš¸ ìˆ˜ ì�ˆê²Œ í•´ì£¼ê³  ì§�ì ‘ APIì™€ ìƒ�í˜¸ì�‘ìš© í•  ìˆ˜ ì�ˆìŠµë‹ˆë‹¤:



ê·¸ëŸ¬ê³  ë‚˜ì„œ "Execute" ë²„íŠ¼ì�„ ëˆ„ë¥´ë©´, ì‚¬ìš©ì�� ì�¸í„°í�˜ì�´ìŠ¤ëŠ” APIì™€ í†µì‹ í•˜ê³  ë§¤ê°œë³€ìˆ˜ë¥¼ ì „ì†¡í•˜ë©° ê·¸ ê²°ê³¼ë¥¼ ê°€ì ¸ì™€ì„œ í™”ë©´ì—� í‘œì‹œí•©ë‹ˆë‹¤:


ëŒ€ì•ˆ API ë¬¸ì„œ ì—…ê·¸ë ˆì�´ë“œ¶
ê·¸ë¦¬ê³  ì�´ì œ, http://127.0.0.1:8000/redocë¡œ ì�´ë�™í•©ë‹ˆë‹¤.

ëŒ€ì•ˆ ë¬¸ì„œ ì—­ì‹œ ìƒˆ ì¿¼ë¦¬ ë§¤ê°œë³€ìˆ˜ì™€ ë³¸ë¬¸ì�„ ë°˜ì˜�í•©ë‹ˆë‹¤:


ìš”ì•½¶
ìš”ì•½í•˜ë©´, ì—¬ëŸ¬ë¶„ì�€ ë§¤ê°œë³€ìˆ˜ì�˜ íƒ€ì�…, ë³¸ë¬¸ ë“±ì�„ í•¨ìˆ˜ ë§¤ê°œë³€ìˆ˜ë¡œì„œ í•œë²ˆì—� ì„ ì–¸í–ˆìŠµë‹ˆë‹¤.
ì—¬ëŸ¬ë¶„ì�€ í˜„ëŒ€ í‘œì¤€ íŒŒì�´ì�¬ íƒ€ì�…ìœ¼ë¡œ ì�´ë¥¼ í–‰í–ˆìŠµë‹ˆë‹¤.
ìƒˆë¡œìš´ ë¬¸ë²•, íŠ¹ì • ë�¼ì�´ë¸ŒëŸ¬ë¦¬ì�˜ ë©”ì†Œë“œë‚˜ í�´ë�˜ìŠ¤ ë“±ì�„ ë°°ìš¸ í•„ìš”ê°€ ì—†ìŠµë‹ˆë‹¤.
ê·¸ì € í‘œì¤€ Python ì�…ë‹ˆë‹¤.
ì˜ˆë¥¼ ë“¤ì–´, intì—� ëŒ€í•´ì„ :
item_id: int

ë˜�ëŠ” ì¢€ ë�” ë³µì�¡í•œ Item ëª¨ë�¸ì—� ëŒ€í•´ì„ :
item: Item

...ê·¸ë¦¬ê³  ë‹¨ í•˜ë‚˜ì�˜ ì„ ì–¸ìœ¼ë¡œ ì—¬ëŸ¬ë¶„ì�´ ì–»ëŠ” ê²ƒì�€:

ë‹¤ì�Œì�„ í�¬í•¨í•œ í�¸ì§‘ê¸° ì§€ì›�:
ì��ë�™ì™„ì„±.
íƒ€ì�… ê²€ì‚¬.


ë�°ì�´í„° ê²€ì¦�:
ë�°ì�´í„°ê°€ ìœ íš¨í•˜ì§€ ì•Šì�„ ë•Œ ì��ë�™ìœ¼ë¡œ ìƒ�ì„±í•˜ëŠ” ëª…í™•í•œ ì—�ëŸ¬.
ì¤‘ì²©ë�œ JSON ê°�ì²´ì—� ëŒ€í•œ ìœ íš¨ì„± ê²€ì‚¬.


ì�…ë ¥ ë�°ì�´í„° ë³€í™˜: ë„¤íŠ¸ì›Œí�¬ì—�ì„œ íŒŒì�´ì�¬ ë�°ì�´í„° ë°� íƒ€ì�…ìœ¼ë¡œ ì „ì†¡. ì�½ì�„ ìˆ˜ ì�ˆëŠ” ê²ƒë“¤:
JSON.
ê²½ë¡œ ë§¤ê°œë³€ìˆ˜.
ì¿¼ë¦¬ ë§¤ê°œë³€ìˆ˜.
ì¿ í‚¤.
í—¤ë�”.
í�¼(Forms).
íŒŒì�¼.


ì¶œë ¥ ë�°ì�´í„° ë³€í™˜: íŒŒì�´ì�¬ ë�°ì�´í„° ë°� íƒ€ì�…ì�„ ë„¤íŠ¸ì›Œí�¬ ë�°ì�´í„°ë¡œ ì „í™˜(JSON í˜•ì‹�ìœ¼ë¡œ):
íŒŒì�´ì�¬ íƒ€ì�… ë³€í™˜ (str, int, float, bool, list, ë“±).
datetime ê°�ì²´.
UUID ê°�ì²´.
ë�°ì�´í„°ë² ì�´ìŠ¤ ëª¨ë�¸.
...ë�” ë§�ì�€ ê²ƒë“¤.


ëŒ€ì•ˆê°€ëŠ¥í•œ ì‚¬ìš©ì�� ì�¸í„°í�˜ì�´ìŠ¤ë¥¼ 2ê°œ í�¬í•¨í•œ ì��ë�™ ëŒ€í™”í˜• API ë¬¸ì„œ:
Swagger UI.
ReDoc.




ì�´ì „ ì½”ë“œ ì˜ˆì œë¡œ ë�Œì•„ê°€ì„œ, **FastAPI**ëŠ” ë‹¤ì�Œì²˜ëŸ¼ ì²˜ë¦¬í•©ë‹ˆë‹¤:

GET ë°� PUT ìš”ì²­ì—� item_idê°€ ê²½ë¡œì—� ì�ˆëŠ”ì§€ ê²€ì¦�.
GET ë°� PUT ìš”ì²­ì—� item_idê°€ int íƒ€ì�…ì�¸ì§€ ê²€ì¦�.
ê·¸ë ‡ì§€ ì•Šë‹¤ë©´ í�´ë�¼ì�´ì–¸íŠ¸ëŠ” ìœ ìš©í•˜ê³  ëª…í™•í•œ ì—�ëŸ¬ë¥¼ ë³¼ ìˆ˜ ì�ˆìŠµë‹ˆë‹¤.


GET ìš”ì²­ì—� që�¼ëŠ” ì„ íƒ�ì �ì�¸ ì¿¼ë¦¬ ë§¤ê°œë³€ìˆ˜ê°€ ê²€ì‚¬(http://127.0.0.1:8000/items/foo?q=somequeryì²˜ëŸ¼).
q ë§¤ê°œë³€ìˆ˜ëŠ” = Noneìœ¼ë¡œ ì„ ì–¸ë�˜ì—ˆê¸° ë•Œë¬¸ì—� ì„ íƒ�ì‚¬í•­ì�…ë‹ˆë‹¤.
Noneì�´ ì—†ë‹¤ë©´ í•„ìˆ˜ì‚¬í•­ì�…ë‹ˆë‹¤(PUTì�˜ ê²½ìš°ì™€ ë§ˆì°¬ê°€ì§€ë¡œ).


/items/{item_id}ìœ¼ë¡œì�˜ PUT ìš”ì²­ì�€ ë³¸ë¬¸ì�„ JSONìœ¼ë¡œ ì�½ì�Œ:
nameì�„ í•„ìˆ˜ ì†�ì„±ìœ¼ë¡œ ê°–ê³  str í˜•ì�¸ì§€ ê²€ì‚¬.
priceì�„ í•„ìˆ˜ ì†�ì„±ìœ¼ë¡œ ê°–ê³  float í˜•ì�¸ì§€ ê²€ì‚¬.
ë§Œì•½ ì£¼ì–´ì§„ë‹¤ë©´, is_offerë¥¼ ì„ íƒ� ì†�ì„±ìœ¼ë¡œ ê°–ê³  bool í˜•ì�¸ì§€ ê²€ì‚¬.
ì�´ ëª¨ë“  ê²ƒì�€ ê¹Šì�´ ì¤‘ì²©ë�œ JSON ê°�ì²´ì—�ë�„ ì �ìš©ë�©ë‹ˆë‹¤.


JSONì�„ ë³€í™˜í•˜ê±°ë‚˜ JSONìœ¼ë¡œ ë³€í™˜í•˜ëŠ” ê²ƒì�„ ì��ë�™í™”.
ë‹¤ì�Œì—�ì„œ ì‚¬ìš©í•  ìˆ˜ ì�ˆëŠ” ëª¨ë“  ê²ƒì�„ OpenAPIë¡œ ë¬¸ì„œí™”:
ëŒ€í™”í˜• ë¬¸ì„œ ì‹œìŠ¤í…œ.
ì—¬ëŸ¬ ì–¸ì–´ë“¤ì—� ëŒ€í•œ ì��ë�™ í�´ë�¼ì�´ì–¸íŠ¸ ì½”ë“œ ìƒ�ì„± ì‹œìŠ¤í…œ.


2ê°œì�˜ ëŒ€í™”í˜• ë¬¸ì„œ ì›¹ ì�¸í„°í�˜ì�´ìŠ¤ë¥¼ ì§�ì ‘ ì œê³µ.


ìš°ë¦¬ëŠ” ê·¸ì € ìˆ˜ë°• ê²‰ í•¥ê¸°ë§Œ í–ˆì�„ ë¿�ì�¸ë�° ì—¬ëŸ¬ë¶„ì�€ ë²Œì�¨ ì–´ë–»ê²Œ ì�‘ë�™í•˜ëŠ”ì§€ ì•Œê³  ì�ˆìŠµë‹ˆë‹¤.
ë‹¤ì�Œ ì¤„ì�„ ë°”ê¿”ë³´ì‹­ì‹œì˜¤:
    return {"item_name": item.name, "item_id": item_id}

...ì—�ì„œ:
        ... "item_name": item.name ...

...ìœ¼ë¡œ:
        ... "item_price": item.price ...

...ê·¸ëŸ¬ê³  ë‚˜ì„œ ì—¬ëŸ¬ë¶„ì�˜ í�¸ì§‘ê¸°ê°€ ì†�ì„±ê³¼ íƒ€ì�…ì�„ ì•Œê³  ì��ë�™ ì™„ì„±í•˜ëŠ”ì§€ ë³´ì‹­ì‹œì˜¤:

ë�” ë§�ì�€ ê¸°ëŠ¥ì�„ í�¬í•¨í•œ ë³´ë‹¤ ì™„ì „í•œ ì˜ˆì œì�˜ ê²½ìš°, íŠœí† ë¦¬ì–¼ - ì‚¬ìš©ì�� ê°€ì�´ë“œë¥¼ ë³´ì‹­ì‹œì˜¤.
ìŠ¤í�¬ì�¼ëŸ¬ ì£¼ì�˜: íŠœí† ë¦¬ì–¼ - ì‚¬ìš©ì�� ê°€ì�´ë“œëŠ”:

ì„œë¡œ ë‹¤ë¥¸ ì�¥ì†Œì—�ì„œ ë§¤ê°œë³€ìˆ˜ ì„ ì–¸: í—¤ë�”, ì¿ í‚¤, í�¼ í•„ë“œ ê·¸ë¦¬ê³  íŒŒì�¼.
maximum_length ë˜�ëŠ” regexì²˜ëŸ¼ **ìœ íš¨ì„± ì œì•½**í•˜ëŠ” ë°©ë²•.
ê°•ë ¥í•˜ê³  ì‚¬ìš©í•˜ê¸° ì‰¬ìš´ ì�˜ì¡´ì„± ì£¼ì�… ì‹œìŠ¤í…œ.
OAuth2 ì§€ì›�ì�„ í�¬í•¨í•œ JWT tokens ë°� **HTTP Basic**ì�„ ê°–ëŠ” ë³´ì•ˆê³¼ ì�¸ì¦�.
(Pydantic ë�•ë¶„ì—�) **ê¹Šì�€ ì¤‘ì²© JSON ëª¨ë�¸**ì�„ ì„ ì–¸í•˜ëŠ”ë�° ë�” ì§„ë³´í•œ (í•˜ì§€ë§Œ ë§ˆì°¬ê°€ì§€ë¡œ ì‰¬ìš´) ê¸°ìˆ .
(Starlette ë�•ë¶„ì—�) ë§�ì�€ ì¶”ê°€ ê¸°ëŠ¥:
ì›¹ ì†Œì¼“
GraphQL
HTTPX ë°� pytestì—� ê¸°ë°˜í•œ ê·¹í�ˆ ì‰¬ìš´ í…ŒìŠ¤íŠ¸
CORS
ì¿ í‚¤ ì„¸ì…˜
...ê¸°íƒ€ ë“±ë“±.



ì„±ëŠ¥¶
ë�…ë¦½ë�œ TechEmpower ë²¤ì¹˜ë§ˆí�¬ì—�ì„œ Uvicornì—�ì„œ ì�‘ë�™í•˜ëŠ” FastAPI ì–´í”Œë¦¬ì¼€ì�´ì…˜ì�´ ì‚¬ìš© ê°€ëŠ¥í•œ ê°€ì�¥ ë¹ ë¥¸ í”„ë ˆì�„ì›Œí�¬ ì¤‘ í•˜ë‚˜ë¡œ Starletteì™€ Uvicorn(FastAPIì—�ì„œ ë‚´ë¶€ì �ìœ¼ë¡œ ì‚¬ìš©)ì—�ë§Œ ë°‘ë�Œê³  ì�ˆìŠµë‹ˆë‹¤. (*)
ì��ì„¸í•œ ë‚´ìš©ì�€ ë²¤ì¹˜ë§ˆí�¬ ì„¹ì…˜ì�„ ë³´ì‹­ì‹œì˜¤.
ì„ íƒ�ê°€ëŠ¥í•œ ì�˜ì¡´ì„±¶
Pydanticì�´ ì‚¬ìš©í•˜ëŠ”:

email_validator - ì�´ë©”ì�¼ ìœ íš¨ì„± ê²€ì‚¬.

Starletteì�´ ì‚¬ìš©í•˜ëŠ”:

HTTPX - TestClientë¥¼ ì‚¬ìš©í•˜ë ¤ë©´ í•„ìš”.
jinja2 - ê¸°ë³¸ í…œí”Œë¦¿ ì„¤ì •ì�„ ì‚¬ìš©í•˜ë ¤ë©´ í•„ìš”.
python-multipart - request.form()ê³¼ í•¨ê»˜ "parsing"ì�˜ ì§€ì›�ì�„ ì›�í•˜ë©´ í•„ìš”.
itsdangerous - SessionMiddleware ì§€ì›�ì�„ ìœ„í•´ í•„ìš”.
pyyaml - Starletteì�˜ SchemaGenerator ì§€ì›�ì�„ ìœ„í•´ í•„ìš” (FastAPIì™€ ì“¸ë•ŒëŠ” í•„ìš” ì—†ì�„ ê²ƒì�…ë‹ˆë‹¤).
graphene - GraphQLApp ì§€ì›�ì�„ ìœ„í•´ í•„ìš”.

FastAPI / Starletteì�´ ì‚¬ìš©í•˜ëŠ”:

uvicorn - ì• í”Œë¦¬ì¼€ì�´ì…˜ì�„ ë¡œë“œí•˜ê³  ì œê³µí•˜ëŠ” ì„œë²„.
orjson - ORJSONResponseì�„ ì‚¬ìš©í•˜ë ¤ë©´ í•„ìš”.
ujson - UJSONResponseë¥¼ ì‚¬ìš©í•˜ë ¤ë©´ í•„ìš”.

pip install fastapi[all]ë¥¼ í†µí•´ ì�´ ëª¨ë‘�ë¥¼ ì„¤ì¹˜ í•  ìˆ˜ ì�ˆìŠµë‹ˆë‹¤.
ë�¼ì�´ì„¼ìŠ¤¶
ì�´ í”„ë¡œì �íŠ¸ëŠ” MIT ë�¼ì�´ì„¼ìŠ¤ ì¡°ì•½ì—� ë”°ë�¼ ë�¼ì�´ì„¼ìŠ¤ê°€ ë¶€ì—¬ë�©ë‹ˆë‹¤.



        Was this page helpful?
      











              
              
                
              
              Thanks for your feedback!
            

              
              
                
              
              Thanks for your feedback!
            











  ë§¨ìœ„ë¡œ







                ë‹¤ì�Œ
              

                ê¸°ëŠ¥
              










        The FastAPI trademark is owned by @tiangolo and is registered in the US and across other regions
    
    
    Made with
    
        Material for MkDocs
    





































