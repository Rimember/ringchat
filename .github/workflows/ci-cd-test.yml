name: CI/CD Pipeline

on:
  push:
    branches:
      - ci-cd-test

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_NAME: "rimember/ringchat"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build Frontend Docker Image
        run: |
          docker build --no-cache -t $DOCKER_IMAGE_NAME-frontend:latest ./frontend

      - name: Build Backend Docker Image
        run: |
          docker build --no-cache -t $DOCKER_IMAGE_NAME-backend:latest ./backend

      - name: Push Frontend Docker Image to Docker Hub
        run: |
          docker push $DOCKER_IMAGE_NAME-frontend:latest

      - name: Push Backend Docker Image to Docker Hub
        run: |
          docker push $DOCKER_IMAGE_NAME-backend:latest

      - name: Create SSH key file
        run: |
          echo "${{ secrets.SERVER_SSH_KEY }}" > server-key.pem
          chmod 600 server-key.pem

      - name: Copy files to server
        run: |
          scp -i server-key.pem -o StrictHostKeyChecking=no -r * ubuntu@${{ secrets.SERVER_IP }}:/home/ubuntu

      - name: Deploy to Server
        run: |
          ssh -i server-key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.SERVER_IP }} "
          export DATABASE_URL='${{ secrets.DATABASE_URL }}' &&
          export OPENAI_API_KEY='${{ secrets.OPENAI_API_KEY }}' &&
          export SECRET_KEY='${{ secrets.SECRET_KEY }}' &&
          export NEXT_PUBLIC_API_URL='http://${{ secrets.SERVER_IP }}:8000/api' &&
          cd /home/ubuntu &&
          if [ -n \"\$(docker ps -q)\" ]; then docker stop \$(docker ps -q); fi &&
          docker system prune -a -f &&
          docker-compose pull &&
          docker-compose up -d &&
          docker-compose exec backend alembic upgrade head
          "
 