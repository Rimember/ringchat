name: Release CD Backend

on:
  push:
    branches:
      - release-test
    paths:
      - 'backend/**'

env:
  DOCKER_IMAGE_NAME: rimember/ringchat-backend-prod:latest
  DOCKER_CONTAINER_NAME: backend-prod
  PORT_PROD1: 8001
  PORT_PROD2: 8002

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE_NAME }} ./backend

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ env.DOCKER_IMAGE_NAME }}

      - name: Deploy Green container on remote server
        uses: appleboy/ssh-action@v1.1.0
        with:
          key: ${{ secrets.BACK_SERVER_SSH_KEY }}
          host: ${{ secrets.BACK_SERVER_HOST }}
          username: ubuntu
          script: |
            if docker ps | grep -q 0.0.0.0:${{ env.PORT_PROD1 }}; then
              NEW_CONTAINER=${{ env.DOCKER_CONTAINER_NAME }}2
              NEW_PORT=${{ env.PORT_PROD2 }}
            else
              NEW_CONTAINER=${{ env.DOCKER_CONTAINER_NAME }}1
              NEW_PORT=${{ env.PORT_PROD1 }}
            fi

            docker stop $NEW_CONTAINER || true
            docker rm $NEW_CONTAINER || true
            docker pull ${{ env.DOCKER_IMAGE_NAME }}
            docker run -d --name $NEW_CONTAINER -p $NEW_PORT:8000 \
              -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
              -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY}} \
              -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY}} \
              ${{ env.DOCKER_IMAGE_NAME }}
